x1[1:4]
m[1,]
m[1,];m[1,2]
apply(x[c("x1","x2","x3")],2,sum)
#计算每个人的总分
apply(x[c("x1","x2","x3")],1,sum)
x=data.frame(num,x1,x2,x3,sumScore)
#计算每个人的总分
sumScore=apply(x[c("x1","x2","x3")],1,sum)
x=data.frame(num,x1,x2,x3,sumScore)
x
#总分最高的同学
which.max(x["sumScore"])
#总分最高的同学
which.max(x[c("sumScore"))
#总分最高的同学
which.max(x[c("sumScore")])
x[c("sumScore")]
#总分最高的同学
which.max(x[c("sumScore")])
#总分最高的同学
which.max(apply(x, 2, sum))
which.max(apply(x, 2, sum))
x=data.frame(num,x1,x2,x3,sumScore)
x
#总分最高的同学
which.max(apply(x, 1, sum))
#总分最高的同学
x$num[which.max(apply(x, 1, sum))]
x[which(x$num=10378089)]
x[which(x$num=10378089)]
x[which(x$num=10378089)]
x[which(x$num=10378089)]
x[which(x$num==10378089)]
x[1]
x[2]
x[1:4]
which(x$num=10378089)
#总分最高的同学
x$num[which.max(apply(x, 1, sum))]
#总分最高的同学
x[which.max(apply(x, 1, sum))]
#总分最高的同学
x$num[which.max(apply(x, 1, sum))]
hist(x$x1)
hist(x$x2)
hist(x)
plot(x$x1,x$x2)
table(x)
table(x$x1)
table(x$x1)
barplot(table(x$x1))
pie(table(x$x1))
boxplot(x)
boxplot(x$x1)
boxplot(x$x1,x$x2)
boxplot(x$x1,x$x2，x$x3)
boxplot(x$x1,x$x2,x$x3)
boxplot(x$x1,x$x2,x$x3,col = c("rec","green","blue")) #箱线图   上线下线分别为最大值和最小值  箱子上下分别为25%分位数和25%分位数
boxplot(x$x1,x$x2,x$x3,col = c("red","green","blue")) #箱线图   上线下线分别为最大值和最小值  箱子上下分别为25%分位数和25%分位数
boxplot(x$x1,x$x2,x$x3,col = c("red","green","blue"),horizontal = T) #箱线图   上线下线分别为最大值和最小值  箱子上下分别为25%分位数和25%分位数
#星象图
stars(x$x1)
#星象图
stars(x[c("x1","x2","x3")])
#星象图
stars(x[c("x1","x2","x3")],full = T )
#星象图
stars(x[c("x1","x2","x3")],full = T )
#星象图
stars(x[c("x1","x2","x3")],full = T ,draw.segments = T)
#星象图
stars(x[c("x1","x2","x3")],full = F ,draw.segments = T)
#星象图
stars(x[c("x1","x2","x3")],full = T ,draw.segments = T)
stars(x[c("x1","x2","x3")])
stars(x[c("x1","x2","x3")],full = T ,draw.segments = T) #雷达图
#茎叶图
stem(x$x1)
x1=round(runif(100,80,100)) #round 默认小数位位0，runif产生均匀分布的随机数
x2=round(rnorm(100,mean = 80,sd=7))#产生100个平均值为80，标准差为7的100个正态分布数
x3=round(rnorm(100,mean = 83,sd = 13)) #正态分布随机数中是没有上下限的
x3[which(x3>100)]=100  #异常值的处理
x=data.frame(num,x1,x2,x3)
stem(x$x1)
#茎叶图
stem(x$x2)
qqnorm(x$x1)
qqnorm(x$x2)
qqline(x$x2)
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系")
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数")
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数",
xlim = c(1:100),ylim = c(1:100)
)
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数",
xlim = c(1,100),ylim = c(1,100)
)
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数",
xlim = c(50,100),ylim = c(50,100)
)
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数",
xlim = c(50,100),ylim = c(50,100),
col="red "
)
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数",
xlim = c(50,100),ylim = c(50,100),
col="red",pch=19
)
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数",
xlim = c(50,100),ylim = c(50,100),
xaxs="i",yaxs="i",
col="red",pch=19
)
#散点图的进阶
plot(x$x1,x$x2,main = "数学和线性代数的关系",xlab = "数学分析",ylab = "线性代数",
xlim = c(50,100),ylim = c(50,100),
xaxs="i",yaxs="i",
col="red",pch=18
)
data()
heatmap(as.matrix(mtcars))
heatmap(as.matrix(mtcars),Rowv = na)
heatmap(as.matrix(mtcars),Rowv = NA)
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA)
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256)
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256))
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256))
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256),scale = "column")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256),scale = "column",margins = c(2,8))
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256),scale = "column",
margins = c(2,8)，mian="cars")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256),scale = "column",
margins = c(2,8),mian="cars")
heatmap(as.matrix(mtcars),Rowv = NA,Colv = NA,col=heat.colors(256),scale = "column",
margins = c(2,8),main="cars")
iris[,3:4]
iris
iris[,3:4]
iris
#向日葵散点图
sunflowerplot(iris[,3:4],col = "gold")
#向日葵散点图
sunflowerplot(iris[,3:4])
sunflowerplot(iris[,3:4])
#向日葵散点图
sunflowerplot(iris[,3:4],col = "gold",seg.col = "gold")
#向日葵散点图
sunflowerplot(iris[3:4],col = "gold",seg.col = "gold") #对数据集的
iris[3:4]
#散点图集
plot(iris[,1:4])
#散点图集
plot(iris[1:4])
#散点图集
plot(iris[1:4]);pairs(iris[1:4])
plot(iris[1:4],pch=19,col="blue")
plot(iris[1:4],pch=19,col="blue",cex=0.9)
sunflowerplot(iris[1:4],col = "gold",seg.col = "gold") #对数据集的第三列和第四列画图，重叠的部分用延伸的线来表示
plot(iris[1:4],pch=19,col="blue",cex=0.9);pairs(iris[1:4])
plot(iris[1:4],pch=19,col="blue",cex=0.9);
#par 函数将作图区域分割
par(mflow=c(3:1))
#par 函数将作图区域分割
par(mfrow=c(3:1))
#par 函数将作图区域分割
par(mfrow=c(3,1))
plot(iris[1:4],pch=19,col="blue",cex=0.9);pairs(iris[1:4])
#par 函数将作图区域分割
par(mfrow=c(3,1))
plot(iris[1:4],pch=19,col="blue",cex=0.9);pairs(iris[1:4])
plot(x1,x2)
plot(x1,x2);plot(x2,x3)
plot(x1,x2);plot(x2,x3);plot(x1,x3)
plot(x1,x2,main = "1");plot(x2,x3,main = "1");plot(x1,x3,main = "1")
plot(x1,x2,main = "1");plot(x2,x3,main = "2");plot(x1,x3,main = "2")
plot(x1,x2,main = "1");plot(x2,x3,main = "2");plot(x1,x3,main = "3")
color()
colors()
dev()
dev.cur()
dev.new()
scatterplot3d(x[2:4])
install.packages("scatterplot3d")
scatterplot3d(x[2:4])
library(scatterplot3d)
#地图
Map("state",interior=fasle)
#地图
map("state",interior=fasle)
install.packages("maps")
library(maps)
map("state",interior=fasle)
map("state",interior=FALSE)
map("state",interior=FALSE,col = "red ")
map("world",interior=FALSE,col = "red ")
map("world",interior=FALSE,col = "red ")
map("state",interior=FALSE,col = "red ")
map("china",interior=FALSE,col = "red ")
map("world",interior=FALSE,col = "red ")
map("world")
map("states")
map("state")
li=iris
li
cor(li[1],li[2])
plot(li[1],li[2])
plot(li[2],li[3])
li
li[1];li[2]
plot(li[1],li[2])
li=iris(which(iris$Species=="setosa"),1:2)
li=iris[which(iris$Species=="setosa"),1:2]
li
plot(li)
#相关系数
cor(li)
#相关系数
cor(li[1],li[2])
#相关系数显著性检验
cor.test(li[1],li[2])
li[1]
#相关系数显著性检验
cor.test(li$Sepal.Length,li$Sepal.Width)
li$Sepal.Length
is.vector(li$Sepal.Length)
is.vector(li[1])
mode(li[1])
mode(li$Sepal.Length)
swiss
views(swiss)
view(swiss)
View(swiss)
s=lm(Ftertility~.,data = swiss)
s=lm(Fertility~.,data = swiss)
s
summary(s)
heat.colors(5)
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
brewer.pal(7,"RlOrRd")
brewer.pal(7,"YlOrRd")
display.brewer.pal(7,"YlOrRd")
par(bg="gray")
plot(norm(100))
plot(rnorm(100))
box(which = "plot")
box(which = "figure")
box(which = "Outer")
box(which = "Figure")
box(which = "figure")
x=rnorm(100)
shapiro.test(x)   看p值，如果太小则显著就不拒绝原假设，原假设为不符合正态分布
shapiro.test(x)   #看p值，如果太小则显著就不拒绝原假设，原假设为不符合正态分布
#正态性检验
x=rnorm(1000)
shapiro.test(x)   #看p值，如果太小则显著就不拒绝原假设，原假设为不符合正态分布
#正态性检验
x=rnorm(100000)
shapiro.test(x)   #看p值，如果太小则显著就不拒绝原假设，原假设为不符合正态分布
#正态性检验
x=rnorm(5000)
shapiro.test(x)   #看p值，如果太小则显著就不拒绝原假设，原假设为不符合正态分布
install.packages("lattice")
library(lattice)
xyplot(mpg~disp)
xyplot(mpg~disp,data=mtcars)
xyplot(mpg~disp,data=mtcars,groups = cyl)
xyplot(mpg~disp,data=mtcars,groups = cyl,auto.key = list(corner=c(1,1)))
#ggplot 包是R语言中强大的画图包
library(ggplot2)
qplot(mpg,disp,data=mtcars)
qplot(mpg,disp,data=mtcars,col=as.factor(cyl))
qplot(mpg,disp,data=mtcars,size=as.factor(cyl))
qplot(mpg,disp,data=mtcars,size=as.factor(cyl),col=as.factor(mpg)
qplot(mpg,disp,data=mtcars,size=as.factor(cyl),col=as.factor(mpg))
qplot(mpg,disp,data=mtcars,size=as.factor(cyl),col=as.factor(cyl))
qplot(mpg,disp,data=mtcars,size=as.factor(cyl),col=as.factor(mpg))
#plot中的text()可以在plot图上进行标识文字
plot(mpg~disp,data=mtcars)
text(255,35,"nihao")
text(255,100,"nihao")
text(255,100,"nihao")
text(258,22,"nihao")
text(mtcars$mpg,mtcars$disp,"nihao")  #text函数跟line、point一样是低水平的作图工具
text(mtcars$mpg,mtcars$disp,"nihao")  #text函数跟line、point一样是低水平的作图工具
#plot中的text()可以在plot图上进行标识文字
plot(mpg~disp,data=mtcars)
text(mtcars$mpg,mtcars$disp,"nihao")  #text函数跟line、point一样是低水平的作图工具
text(mtcars$mpg,mtcars$disp,mtcars$carb)  #text函数跟line、point一样是低水平的作图工具
#arrows函数用来画出误差条
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,x1=mtcars$disp)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,x1=mtcars$disp,y1=mtcars$disp*0.95)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,x1=mtcars$disp,y1=mtcars$mpg*0.95)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,x1=mtcars$disp,y1=mtcars$mpg*0.95,angle = 90,code=3)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,x1=mtcars$disp,y1=mtcars$mpg*0.95,angle = 90,code=3,length = 0.04)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,x1=mtcars$disp,y1=mtcars$mpg*0.95,angle = 90,code=3,length = 0.04,lwd = 0.4)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,
x1=mtcars$disp,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
#arrows函数用来画出误差条
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,
x1=mtcars$disp,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
#arrows函数用来画出误差条
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,
x1=mtcars$disp,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$disp*0.95,
x1=mtcars$disp,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$mpg*0.95,
x1=mtcars$disp,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$mpg*0.95,
x1=mtcars$disp*0.5,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$mpg*0.95,
x1=mtcars$disp*0.95,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$mpg*0.95,
x1=mtcars$disp,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$mpg*0.95,
x1=mtcars$disp*0.95,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.0
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$mpg*0.95,
x1=mtcars$disp*0.95,y1=mtcars$mpg*1.05,angle = 90,code=3,length = 0.04,lwd = 0.4)
plot(mpg~disp,data = mtcars)
arrows(x0=mtcars$disp,y0=mtcars$mpg*0.95,
x1=mtcars$disp*0.95,y1=mtcars$mpg*1.05,angle = 30,code=3,length = 0.04,lwd = 0.4)
qplot(mpg,disp,data=mtcars,col=as.factor(cyl))
qplot(mpg,disp,data=mtcars,size=as.factor(cyl),col=as.factor(mpg))
xyplot(mpg~disp,data=mtcars,groups = cyl,auto.key = list(corner=c(1,1)))
plot(mpg~disp,data=mtcars)
text(mtcars$mpg,mtcars$disp,mtcars$carb)  #text函数跟line、point一样是低水平的作图工具 通过这种方法可以将数据
x=rnorm(100)
x
plot(x,y)
y=rnorm(100)
plot(x,y)
x=rnorm(10000)
y=rnorm(10000)
plot(x,y)
plot(x,y)
x=rnorm(10000,col=2)
smoothScatter(x,y)
install.packages("plyr")
library(plyr)
install.packages("ggplot2")
install.packages("reshape2")
library(ggplot2)
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
install.packages("installr")
require(installr)#load/install + load installr
updateR()
install.packages("installr")
help("levels")
byyear2
byyear2=melt(byYear,id="year") #melt 函数？
source('~/我的文档/MBA养成记/2-自我提升/2-数据分析/程序练习/数据科学实战手册/R-01-carDataVisualization/carDataVisualization.r', echo=TRUE)
byYear<-ddply(gasCars,~year,summarise,avgMPG=mean(comb08),avgDispl<-mean(displ))
byyear2=melt(byYear,id="year") #melt 函数？
levels(byyear2$variable)<-c("Average MPG","Avg engine displacement")
byyear2
nrow(byyear2)
#五、查看引擎排量和和MPG之间的关系
byYear<-ddply(gasCars,~year,summarise,avgMPG=mean(comb08),avgDispl<-mean(displ))
gasCars<-subset(vehicles,fuelType1 %in%c("Regular Gasoline","Premium Gasoline","midgrade Gasoline")&fuelType2==""&atvType!="Hybrid")
nrow(gasCars);nrow(vehicles)
GascarmpgByYr<-ddply(gasCars,~year,summarise,avgMPG=mean(comb08),avgHghy=mean(highway08),avgCity=mean(city08))
ggplot(GascarmpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("All cars")
source('~/我的文档/MBA养成记/2-自我提升/2-数据分析/程序练习/数据科学实战手册/R-01-carDataVisualization/carDataVisualization.r', echo=TRUE)
source('~/我的文档/MBA养成记/2-自我提升/2-数据分析/程序练习/数据科学实战手册/R-01-carDataVisualization/carDataVisualization.r', echo=TRUE)
byyear2
byyear2=melt(byYear,id="year") #melt 函数？
byyear2
ggplot(gasCars4,aes(factor(year),comb08))+geom_boxplot()+facet_wrap(~trany2,ncol = 1)+theme(axis.title.x = element_text(angle = 45))+labs(x="year",y="MPG")
setwd("/Users/gavinchen/我的文档/MBA养成记/2-自我提升/2-数据分析/程序练习/数据科学实战手册/R-01-carDataVisualization")
data_file=read.csv("Data/vehicles.csv")
data_file
summary(data_file)
ncol(data_file)
nrow(data_file)
headName=do.call(rbind(strsplit(readline("Data/varlabels.txt"))))
headName=do.call(rbind(strsplit(readline("Data/varlabels.txt")," - ")))
headName=do.call(rbind,(strsplit(readline("Data/varlabels.txt")," - ")))
headName
headName=do.call(rbind,strsplit(readline("Data/varlabels.txt")," - "))
headName<-do.call(rbind,strsplit(readLines("Data/varlabels.txt")," - "))
headName
Views(headName)
View(headName)
names(data_file)
#读取数据文件
vehicle=read.csv("Data/vehicles.csv")
#查看变量概况
summary(vehicle)
ncol(vehicle)
names(vehicle)
#将变量解释拆分并读进文件
headName<-do.call(rbind,strsplit(readLines("Data/varlabels.txt")," - "))
table(vehicle$year)
table(vehicle$type)
table(vehicle$fuelType)
#数据处理
table(vehicle$trany)
length(vehicle$trany[vehicle==""])
length(vehicle$trany[vehicle$trany==""])
#数据处理
vehicle$trany[vehicle==""]<-NA
#读取数据文件
vehicle=read.csv("Data/vehicles.csv")
#数据处理
vehicle$trany[vehicle$trany==""]<-NA
table(vehicle$trany)
length(vehicle$trany[vehicle$trany==NA])
ncol(vehicle)
nrow(vehicle)
table(vehicle$trany2)
with(vehicle,table(year,trany))
a<-with(vehicle,table(year,trany))
View(a)
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,avgMPG=mean(mpg))
mpgByYr
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,avgMPG=mean(mpg),avgHghy=mean(highway08),avgCity=mean(city08))
mpgByYr
ggplot(mpgByYr,aes=(year,avgMPG))+geom_point()+geom_smooth()
ggplot(mpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,avgMPG=mean(mpg),avgHghy=mean(highway08),avgCity=mean(city08))
ggplot(mpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,summarise,avgMPG=mean(mpg),avgHghy=mean(highway08),avgCity=mean(city08))
ggplot(mpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()
ggplot(mpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("All cars")
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,summarise,avgMPG=mean(mpg),avgHghy=mean(highway08),avgCity=mean(city08))
mpgByYr
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,summarise,avgMPG=mean(comb08),avgHghy=mean(highway08),avgCity=mean(city08))
ggplot(mpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("All cars")
)
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,summarise,avgMPG=mean(comb08))
ggplot(mpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("All cars")
table(vehicle$displ)
#二、筛选出燃油车然后查看每加仑汽油行驶公里数的趋势
gasCar<-subset(vehicle,vehicle$fuelType1 %in% c("Regular Gasoline","Premium Gasoline","midgrade Gasoline")&fuelType2==""&atvType!="Hybrid")
View(vehicle)
mpgByYr<-ddply(gasCar,~year,summarise,avgMPG=mean(comb08))
#一、查看近几年每加仑汽油行驶公里数趋势
mpgByYr<-ddply(vehicle,~year,summarise,avgMPG=mean(comb08))
gasCarmpgByYr<-ddply(gasCar,~year,summarise,avgMPG=mean(comb08))
ggplot(gasCarmpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("All cars")
ggplot(gasCarmpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("燃油车MPG趋势")
ggplot(gasCarmpgByYr,aes(year,avgMPG))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("gasCar MPG")
#三、查看汽车排量和燃油效率的趋势
mpgdispl<-ddply(vehicle,~year,summarise,avgMPG=mean(comb08),avgDispl=mean(displ))
ggplot(mpgdispl,aes(avgMPG,avgDispl))+geom_point()+geom_smooth()+xlab("Year")+ylab("Average MPG")+ggtitle("gasCar MPG")
ggplot(mpgdispl,aes(avgMPG,avgDispl))+geom_point()+geom_smooth()+xlab("avgMPG")+ylab("avgDispl")+ggtitle(" MPG&avgDispl")
ggplot(mpgdispl,aes(avgDispl,avgMPG))+geom_point()+geom_smooth()+xlab("avgMPG")+ylab("avgDispl")+ggtitle(" MPG&avgDispl")
ggplot(gasCars,aes(displ,comb08))+geom_point()+geom_smooth()
#三、查看汽车排量和燃油效率的趋势
typeof(vehicle$displ)
as.numeric(vehicle$displ)
#三、查看汽车排量和燃油效率的趋势
typeof(vehicle$displ)
#三、查看汽车排量和燃油效率的趋势
ggplot(vehicle,aes(displ,comb08))
#三、查看汽车排量和燃油效率的趋势
ggplot(vehicle,aes(displ,comb08))+geom_point()
#三、查看汽车排量和燃油效率的趋势
ggplot(vehicle,aes(displ,comb08))+geom_point()+geom_smooth()
ggplot(gasCars,aes(displ,comb08))+geom_point()+geom_smooth()
#三、查看汽车排量和燃油效率的趋势
ggplot(gasCar,aes(displ,comb08))+geom_point()+geom_smooth()
byYear<-ddply(gasCars,~year,summarise,avgMPG=mean(comb08),avgDispl<-mean(displ))
byYear
byyear2=melt(byYear,id="year") #melt 函数？
byyear2
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol = 1,scales = "free_y")+xlab("Year")+ylab("")
levels(byyear2$variable)<-c("Average MPG","Avg engine displacement")
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol = 1,scales = "free_y")+xlab("Year")+ylab("")
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable)
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,scales = "free_y")
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,col=1,scales = "free_y")
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol=1,scales = "free_y")
2
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol=2,scales = "free_y")
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol=3,scales = "free_y")
1
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol=1,scales = "free_y")
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol=1,scales = "free_y")+labs(x="1",y="2")
ggplot(byyear2,aes(year,value))+geom_point()+geom_smooth()+facet_wrap(~variable,ncol=1,scales = "free_y")+labs(x="Year",y="")
